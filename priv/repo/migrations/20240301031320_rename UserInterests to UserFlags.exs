defmodule :"Elixir.Animina.Repo.Migrations.Rename UserInterests to UserFlags" do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:user_flags, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :flag_id, :uuid, null: false

      add :user_id,
          references(:users,
            column: :id,
            name: "user_flags_user_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          ),
          null: false

      add :position, :bigint, null: false
      add :color, :text, null: false
    end

    create index(:user_flags, ["color", "user_id"])

    create index(:user_flags, ["flag_id", "user_id"])

    create index(:user_flags, ["flag_id"])

    create index(:user_flags, ["user_id"])
  end

  def down do
    drop constraint(:user_flags, "user_flags_user_id_fkey")

    drop_if_exists index(:user_flags, ["user_id"], name: "user_flags_user_id_index")

    drop_if_exists index(:user_flags, ["flag_id"], name: "user_flags_flag_id_index")

    drop_if_exists index(:user_flags, ["flag_id", "user_id"],
                     name: "user_flags_flag_id_user_id_index"
                   )

    drop_if_exists index(:user_flags, ["color", "user_id"],
                     name: "user_flags_color_user_id_index"
                   )

    drop table(:user_flags)
  end
end
